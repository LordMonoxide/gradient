buildscript {
  repositories {
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
  }
  dependencies {
    classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
  }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'

ext.configFile = file "build.properties"
configFile.withReader {
  def prop = new Properties()
  prop.load(it)
  project.ext.config = new ConfigSlurper().parse prop
}

version = config.version
group= "lordmonoxide.gradient" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gradient"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
  sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
  version = config.mc_version + "-" + config.forge_version
  runDir = "run"

  // the mappings can be changed at any time, and must be in the following format.
  // snapshot_YYYYMMDD   snapshot are built nightly.
  // stable_#            stables are built at the discretion of the MCP team.
  // Use non-default mappings at your own risk. they may not allways work.
  // simply re-run your setup task after changing the mappings to update your workspace.
  mappings = config.mappings_version
  // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

  // replace "\${version}", project.version
}

repositories {
  maven {
    //IC2
    name = "player-ic2"
    url = "http://maven.ic2.player.to/"
  }

  maven {
    name = "BuildCraft"
    url = "http://www.mod-buildcraft.com/maven"
  }

  maven {
    // JEI
    name = "Progwml6 maven"
    url = "http://dvs1.progwml6.com/files/maven"
  }
}

dependencies {
  deobfCompile 'net.industrial-craft:industrialcraft-2:2.8.111-ex112'

  //deobfCompile 'com.mod-buildcraft:buildcraft-all:7.99.23'

  // compile against the JEI API but do not include it at runtime
  deobfProvided 'mezz.jei:jei_1.12.2:4.15.0.268:api'
  // at runtime, use the full JEI jar
  runtime 'mezz.jei:jei_1.12.2:4.15.0.268'

  testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"

  // you may put jars on which you depend on in ./libs
  // or you may define them like so..
  //compile "some.group:artifact:version:classifier"
  //compile "some.group:artifact:version"

  // real examples
  //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
  //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

  // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
  //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

  // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
  // except that these dependencies get remapped to your current MCP mappings
  //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
  //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

  // for more info...
  // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
  // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources {
  // this will ensure that this task is redone when the versions change.
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version

  // replace stuff in mcmod.info, nothing else
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'

    // replace version and mcversion
    expand 'version':project.version, 'mcversion':project.minecraft.version
  }

  // copy everything else, thats not the mcmod.info
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }
}

junitPlatformTest {
  finalizedBy jacocoTestReport
}
